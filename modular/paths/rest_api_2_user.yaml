get:
  tags:
    - Users
  summary: Get user
  description: >-
    Returns a user.


    Privacy controls are applied to the response based on the user's
    preferences. This could mean, for example, that the user's email address is
    hidden. See the [Profile visibility
    overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/)
    for more details.


    **[Permissions](#permissions) required:** *Browse users and groups* [global
    permission](https://confluence.atlassian.com/x/x4dKLg).
  operationId: getUser
  parameters:
    - name: accountId
      in: query
      description: >-
        The account ID of the user, which uniquely identifies the user across
        all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
        Required.
      schema:
        maxLength: 128
        type: string
        example: 5b10ac8d82e05b22cc7d4ef5
      x-showInExample: 'true'
    - name: username
      in: query
      description: >-
        This parameter is no longer available. See the [deprecation
        notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide)
        for details.
      schema:
        type: string
    - name: key
      in: query
      description: >-
        This parameter is no longer available. See the [deprecation
        notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide)
        for details.
      schema:
        type: string
    - name: expand
      in: query
      description: >-
        Use [expand](#expansion) to include additional information about users
        in the response. This parameter accepts a comma-separated list. Expand
        options include:

         *  `groups` includes all groups and nested groups to which the user belongs.
         *  `applicationRoles` includes details of all the applications to which the user has access.
      schema:
        type: string
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/User.yaml
          example: >-
            {"self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g","key":"","accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","name":"","emailAddress":"mia@example.com","avatarUrls":{"48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32"},"displayName":"Mia
            Krystof","active":true,"timeZone":"Australia/Sydney","groups":{"size":3,"items":[]},"applicationRoles":{"size":1,"items":[]}}
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: >-
        Returned if the calling user does not have the *Browse users and groups*
        global permission.
    '404':
      description: Returned if the user is not found.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - read:jira-user
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:jira-user
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:application-role:jira
        - read:group:jira
        - read:user:jira
        - read:avatar:jira
  x-atlassian-connect-scope: READ
post:
  tags:
    - Users
  summary: Create user
  description: >-
    Creates a user. This resource is retained for legacy compatibility. As soon
    as a more suitable alternative is available this resource will be
    deprecated.


    If the user exists and has access to Jira, the operation returns a 201
    status. If the user exists but does not have access to Jira, the operation
    returns a 400 status.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg).
  operationId: createUser
  parameters: []
  requestBody:
    description: Details about the user to be created.
    content:
      application/json:
        schema:
          $ref: ../components/schemas/NewUserDetails.yaml
        example:
          emailAddress: mia@atlassian.com
    required: true
  responses:
    '201':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/User.yaml
          example: >-
            {"self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g","key":"","accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","name":"","emailAddress":"mia@example.com","avatarUrls":{"48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32"},"displayName":"Mia
            Krystof","active":true,"timeZone":"Australia/Sydney","groups":{"size":3,"items":[]},"applicationRoles":{"size":1,"items":[]}}
    '400':
      description: >-
        Returned if the request is invalid or the number of licensed users is
        exceeded.
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: Returned if the user does not have the necessary permission.
  deprecated: false
  security:
    - basicAuth: []
    - {}
  x-experimental: true
  x-atlassian-connect-scope: INACCESSIBLE
delete:
  tags:
    - Users
  summary: Delete user
  description: >-
    Deletes a user. If the operation completes successfully then the user is
    removed from Jira's user base. This operation does not delete the user's
    Atlassian account.


    **[Permissions](#permissions) required:** Site administration (that is,
    membership of the *site-admin*
    [group](https://confluence.atlassian.com/x/24xjL)).
  operationId: removeUser
  parameters:
    - name: accountId
      in: query
      description: >-
        The account ID of the user, which uniquely identifies the user across
        all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
      required: true
      schema:
        maxLength: 128
        type: string
        example: 5b10ac8d82e05b22cc7d4ef5
      x-showInExample: 'true'
    - name: username
      in: query
      description: >-
        This parameter is no longer available. See the [deprecation
        notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
        for details.
      schema:
        type: string
    - name: key
      in: query
      description: >-
        This parameter is no longer available. See the [deprecation
        notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
        for details.
      schema:
        type: string
  responses:
    '204':
      description: Returned if the request is successful.
    '400':
      description: Returned if the user cannot be removed.
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: Returned if the user does not have the necessary permission.
    '404':
      description: Returned if the user is not found.
  deprecated: false
  security:
    - basicAuth: []
    - {}
  x-experimental: true
  x-atlassian-connect-scope: INACCESSIBLE
