get:
  tags:
    - Issue comments
  summary: Get comment
  description: |-
    Returns a comment.

    This operation can be accessed anonymously.

    **[Permissions](#permissions) required:**

     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to.
  operationId: getComment
  parameters:
    - name: issueIdOrKey
      in: path
      description: The ID or key of the issue.
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: The ID of the comment.
      required: true
      schema:
        type: string
    - name: expand
      in: query
      description: >-
        Use [expand](#expansion) to include additional information about
        comments in the response. This parameter accepts `renderedBody`, which
        returns the comment body rendered in HTML.
      schema:
        type: string
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Comment.yaml
          example: >-
            {"self":"https://your-domain.atlassian.net/rest/api/2/issue/10010/comment/10000","id":"10000","author":{"self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g","accountId":"5b10a2844c20165700ede21g","displayName":"Mia
            Krystof","active":false},"body":"Lorem ipsum dolor sit amet,
            consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis
            eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi
            egestas at posuere augue
            semper.","updateAuthor":{"self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g","accountId":"5b10a2844c20165700ede21g","displayName":"Mia
            Krystof","active":false},"created":"2021-01-17T12:34:00.000+0000","updated":"2021-01-18T23:45:00.000+0000","visibility":{"type":"role","value":"Administrators","identifier":"Administrators"}}
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '404':
      description: >-
        Returned if the issue or comment is not found or the user does not have
        permission to view the issue or comment.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - read:jira-work
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:jira-work
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:comment:jira
        - read:comment.property:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
  x-atlassian-connect-scope: READ
put:
  tags:
    - Issue comments
  summary: Update comment
  description: |-
    Updates a comment.

    This operation can be accessed anonymously.

    **[Permissions](#permissions) required:**

     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     *  *Edit all comments*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any comment or *Edit own comments* to update comment created by the user.
     *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to.
  operationId: updateComment
  parameters:
    - name: issueIdOrKey
      in: path
      description: The ID or key of the issue.
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: The ID of the comment.
      required: true
      schema:
        type: string
    - name: notifyUsers
      in: query
      description: Whether users are notified when a comment is updated.
      schema:
        type: boolean
        default: true
    - name: overrideEditableFlag
      in: query
      description: >-
        Whether screen security is overridden to enable uneditable fields to be
        edited. Available to Connect app users with the *Administer Jira*
        [global permission](https://confluence.atlassian.com/x/x4dKLg) and Forge
        apps acting on behalf of users with *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg).
      schema:
        type: boolean
        default: false
    - name: expand
      in: query
      description: >-
        Use [expand](#expansion) to include additional information about
        comments in the response. This parameter accepts `renderedBody`, which
        returns the comment body rendered in HTML.
      schema:
        type: string
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/Comment.yaml
        example:
          visibility:
            identifier: Administrators
            type: role
            value: Administrators
          body: >-
            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
            Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis
            fermentum. Sed semper quam laoreet nisi egestas at posuere augue
            semper.
    required: true
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Comment.yaml
          example: >-
            {"self":"https://your-domain.atlassian.net/rest/api/2/issue/10010/comment/10000","id":"10000","author":{"self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g","accountId":"5b10a2844c20165700ede21g","displayName":"Mia
            Krystof","active":false},"body":"Lorem ipsum dolor sit amet,
            consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis
            eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi
            egestas at posuere augue
            semper.","updateAuthor":{"self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g","accountId":"5b10a2844c20165700ede21g","displayName":"Mia
            Krystof","active":false},"created":"2021-01-17T12:34:00.000+0000","updated":"2021-01-18T23:45:00.000+0000","visibility":{"type":"role","value":"Administrators","identifier":"Administrators"}}
    '400':
      description: >-
        Returned if the user does not have permission to edit the comment or the
        request is invalid.
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '404':
      description: >-
        Returned if the issue or comment is not found or the user does not have
        permission to view the issue or comment.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - write:jira-work
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - write:jira-work
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:comment:jira
        - read:comment.property:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - write:comment:jira
        - read:avatar:jira
  x-atlassian-connect-scope: WRITE
delete:
  tags:
    - Issue comments
  summary: Delete comment
  description: |-
    Deletes a comment.

    **[Permissions](#permissions) required:**

     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.
     *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
     *  *Delete all comments*[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any comment or *Delete own comments* to delete comment created by the user,
     *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to.
  operationId: deleteComment
  parameters:
    - name: issueIdOrKey
      in: path
      description: The ID or key of the issue.
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: The ID of the comment.
      required: true
      schema:
        type: string
  responses:
    '204':
      description: Returned if the request is successful.
    '400':
      description: Returned if the user does not have permission to delete the comment.
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '404':
      description: >-
        Returned if the issue or comment is not found or the user does not have
        permission to view the issue or comment.
    '405':
      description: Returned if an anonymous call is made to the operation.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - write:jira-work
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - write:jira-work
    - state: Beta
      scheme: OAuth2
      scopes:
        - delete:comment:jira
        - delete:comment.property:jira
  x-atlassian-connect-scope: DELETE
