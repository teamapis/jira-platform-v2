get:
  tags:
    - Issue custom field options (apps)
  summary: Get issue field option
  description: >-
    Returns an option from a select list issue field.


    Note that this operation **only works for issue field select list options
    added by Connect apps**, it cannot be used with issue field select list
    options created in Jira or using operations from the [Issue custom field
    options](#api-group-Issue-custom-field-options) resource.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are
    not required for the app providing the field.
  operationId: getIssueFieldOption
  parameters:
    - name: fieldKey
      in: path
      description: >-
        The field key is specified in the following format:
        **$(app-key)\_\_$(field-key)**. For example,
        *example-add-on\_\_example-issue-field*. To determine the `fieldKey`
        value, do one of the following:

         *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
         *  run [Get fields](#api-rest-api-2-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
      required: true
      schema:
        type: string
    - name: optionId
      in: path
      description: The ID of the option to be returned.
      required: true
      schema:
        type: integer
        format: int64
  responses:
    '200':
      description: Returned if the requested option is returned.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/IssueFieldOption.yaml
          example: >-
            {"id":1,"value":"Team 1","properties":{"leader":{"name":"Leader
            Name","email":"lname@example.com"},"members":42,"description":"The
            team's
            description","founded":"2016-06-06"},"config":{"scope":{"projects":[],"projects2":[{"id":1002,"attributes":["notSelectable"]},{"id":1001,"attributes":["notSelectable"]}],"global":{}},"attributes":[]}}
    '400':
      description: Returned if the field is not found or does not support options.
    '403':
      description: >-
        Returned if the request is not authenticated as a Jira administrator or
        the app that provided the field.
    '404':
      description: Returned if the option is not found.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - manage:jira-configuration
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - manage:jira-configuration
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:field.option:jira
  x-atlassian-connect-scope: NONE
put:
  tags:
    - Issue custom field options (apps)
  summary: Update issue field option
  description: >-
    Updates or creates an option for a select list issue field. This operation
    requires that the option ID is provided when creating an option, therefore,
    the option ID needs to be specified as a path and body parameter. The option
    ID provided in the path and body must be identical.


    Note that this operation **only works for issue field select list options
    added by Connect apps**, it cannot be used with issue field select list
    options created in Jira or using operations from the [Issue custom field
    options](#api-group-Issue-custom-field-options) resource.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are
    not required for the app providing the field.
  operationId: updateIssueFieldOption
  parameters:
    - name: fieldKey
      in: path
      description: >-
        The field key is specified in the following format:
        **$(app-key)\_\_$(field-key)**. For example,
        *example-add-on\_\_example-issue-field*. To determine the `fieldKey`
        value, do one of the following:

         *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
         *  run [Get fields](#api-rest-api-2-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
      required: true
      schema:
        type: string
    - name: optionId
      in: path
      description: The ID of the option to be updated.
      required: true
      schema:
        type: integer
        format: int64
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/IssueFieldOption.yaml
        example:
          id: 1
          value: Team 1
          config:
            scope:
              projects2:
                - attributes:
                    - notSelectable
                  id: 1002
                - attributes:
                    - notSelectable
                  id: 1001
              projects: []
              global: {}
            attributes: []
          properties:
            leader:
              name: Leader Name
              email: lname@example.com
            members: 42
            founded: '2016-06-06'
            description: The team's description
    required: true
  responses:
    '200':
      description: Returned if the option is updated or created.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/IssueFieldOption.yaml
          example: >-
            {"id":1,"value":"Team 1","properties":{"leader":{"name":"Leader
            Name","email":"lname@example.com"},"members":42,"description":"The
            team's
            description","founded":"2016-06-06"},"config":{"scope":{"projects":[],"projects2":[{"id":1002,"attributes":["notSelectable"]},{"id":1001,"attributes":["notSelectable"]}],"global":{}},"attributes":[]}}
    '400':
      description: >-
        Returned if the option is invalid, or the *ID* in the request object
        does not match the *optionId* parameter.
    '403':
      description: >-
        Returned if the request is not authenticated as a Jira administrator or
        the app that provided the field.
    '404':
      description: Returned if field is not found.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - manage:jira-configuration
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - manage:jira-configuration
    - state: Beta
      scheme: OAuth2
      scopes:
        - write:field.option:jira
  x-atlassian-connect-scope: NONE
delete:
  tags:
    - Issue custom field options (apps)
  summary: Delete issue field option
  description: >-
    Deletes an option from a select list issue field.


    Note that this operation **only works for issue field select list options
    added by Connect apps**, it cannot be used with issue field select list
    options created in Jira or using operations from the [Issue custom field
    options](#api-group-Issue-custom-field-options) resource.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are
    not required for the app providing the field.
  operationId: deleteIssueFieldOption
  parameters:
    - name: fieldKey
      in: path
      description: >-
        The field key is specified in the following format:
        **$(app-key)\_\_$(field-key)**. For example,
        *example-add-on\_\_example-issue-field*. To determine the `fieldKey`
        value, do one of the following:

         *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
         *  run [Get fields](#api-rest-api-2-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
      required: true
      schema:
        type: string
    - name: optionId
      in: path
      description: The ID of the option to be deleted.
      required: true
      schema:
        type: integer
        format: int64
  responses:
    '204':
      description: Returned if the field option is deleted.
      content:
        application/json:
          schema: {}
    '403':
      description: >-
        Returned if the request is not authenticated as a Jira administrator or
        the app that provided the field.
    '404':
      description: Returned if the field or option is not found.
    '409':
      description: Returned if the option is selected for the field in any issue.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - manage:jira-configuration
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - manage:jira-configuration
    - state: Beta
      scheme: OAuth2
      scopes:
        - delete:field.option:jira
  x-atlassian-connect-scope: NONE
