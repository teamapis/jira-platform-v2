post:
  tags:
    - JQL
  summary: Sanitize JQL queries
  description: >-
    Sanitizes one or more JQL queries by converting readable details into IDs
    where a user doesn't have permission to view the entity.


    For example, if the query contains the clause *project = 'Secret project'*,
    and a user does not have browse permission for the project "Secret project",
    the sanitized query replaces the clause with *project = 12345"* (where 12345
    is the ID of the project). If a user has the required permission, the clause
    is not sanitized. If the account ID is null, sanitizing is performed for an
    anonymous user.


    Note that sanitization doesn't make the queries GDPR-compliant, because it
    doesn't remove user identifiers (username or user key). If you need to make
    queries GDPR-compliant, use [Convert user identifiers to account IDs in JQL
    queries](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-jql/#api-rest-api-3-jql-sanitize-post).


    Before sanitization each JQL query is parsed. The queries are returned in
    the same order that they were passed.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg).
  operationId: sanitiseJqlQueries
  parameters: []
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/JqlQueriesToSanitize.yaml
        example:
          queries:
            - query: project = 'Sample project'
            - accountId: 5b10ac8d82e05b22cc7d4ef5
              query: project = 'Sample project'
            - accountId: cda2aa1395ac195d951b3387
              query: project = 'Sample project'
            - accountId: 5b10ac8d82e05b22cc7d4ef5
              query: invalid query
    required: true
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/SanitizedJqlQueries.yaml
          example: >-
            {"queries":[{"initialQuery":"project = 'Sample
            project'","sanitizedQuery":"project =
            12345"},{"initialQuery":"project = 'Sample
            project'","sanitizedQuery":"project = 'Sample
            project'","accountId":"5b10ac8d82e05b22cc7d4ef5"},{"initialQuery":"project
            = 'Sample project'","sanitizedQuery":"project =
            12345","accountId":"cda2aa1395ac195d951b3387"},{"initialQuery":"non-parsable
            query","errors":{"errorMessages":["Error in the JQL Query: Expecting
            operator but got 'query'. The valid operators are '=', '!=', '<',
            '>', '<=', '>=', '~', '!~', 'IN', 'NOT IN', 'IS' and 'IS NOT'. (line
            1, character
            9)"],"errors":{}},"accountId":"5b10ac8d82e05b22cc7d4ef5"}]}
    '400':
      description: Returned if the request is invalid.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
          example: '{"errorMessages":["The queries has to be provided."],"errors":{}}'
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
    '403':
      description: Returned if the user does not have the necessary permission.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
          example: >-
            {"errorMessages":["You are not authorized to perform this action.
            Administrator privileges are required."],"errors":{}}
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - manage:jira-configuration
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - manage:jira-configuration
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:jql:jira
  x-experimental: true
  x-atlassian-connect-scope: ADMIN
