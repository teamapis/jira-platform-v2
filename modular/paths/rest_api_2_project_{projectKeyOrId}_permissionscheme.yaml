get:
  tags:
    - Project permission schemes
  summary: Get assigned permission scheme
  description: >-
    Gets the [permission scheme](https://confluence.atlassian.com/x/yodKLg)
    associated with the project.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer
    projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
  operationId: getAssignedPermissionScheme
  parameters:
    - name: projectKeyOrId
      in: path
      description: The project ID or project key (case sensitive).
      required: true
      schema:
        type: string
    - name: expand
      in: query
      description: >-
        Use [expand](#expansion) to include additional information in the
        response. This parameter accepts a comma-separated list. Note that
        permissions are included when you specify any value. Expand options
        include:

         *  `all` Returns all expandable information.
         *  `field` Returns information about the custom field granted the permission.
         *  `group` Returns information about the group that is granted the permission.
         *  `permissions` Returns all permission grants for each permission scheme.
         *  `projectRole` Returns information about the project role granted the permission.
         *  `user` Returns information about the user who is granted the permission.
      schema:
        type: string
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PermissionScheme.yaml
          example: >-
            {"id":10000,"self":"https://your-domain.atlassian.net/rest/api/2/permissionscheme/10000","name":"Example
            permission scheme","description":"description"}
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: >-
        Returned if the user does not have permission to view the project's
        configuration.
    '404':
      description: >-
        Returned if the project is not found or the user does not have
        permission to view the project.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - read:jira-work
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:jira-work
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission-scheme:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
  x-atlassian-connect-scope: READ
put:
  tags:
    - Project permission schemes
  summary: Assign permission scheme
  description: >-
    Assigns a permission scheme with a project. See [Managing project
    permissions](https://confluence.atlassian.com/x/yodKLg) for more information
    about permission schemes.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg)
  operationId: assignPermissionScheme
  parameters:
    - name: projectKeyOrId
      in: path
      description: The project ID or project key (case sensitive).
      required: true
      schema:
        type: string
    - name: expand
      in: query
      description: >-
        Use [expand](#expansion) to include additional information in the
        response. This parameter accepts a comma-separated list. Note that
        permissions are included when you specify any value. Expand options
        include:

         *  `all` Returns all expandable information.
         *  `field` Returns information about the custom field granted the permission.
         *  `group` Returns information about the group that is granted the permission.
         *  `permissions` Returns all permission grants for each permission scheme.
         *  `projectRole` Returns information about the project role granted the permission.
         *  `user` Returns information about the user who is granted the permission.
      schema:
        type: string
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/IdBean.yaml
        example:
          id: 10000
    required: true
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PermissionScheme.yaml
          example: >-
            {"id":10000,"self":"https://your-domain.atlassian.net/rest/api/2/permissionscheme/10000","name":"Example
            permission scheme","description":"description"}
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: |-
        Returned if:

         *  the user does not have the necessary permission to edit the project's configuration.
         *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be assigned to projects on free plans.
    '404':
      description: Returned if the project or permission scheme is not found.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - manage:jira-project
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - manage:jira-project
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission-scheme:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        - write:project:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
  x-atlassian-connect-scope: PROJECT_ADMIN
