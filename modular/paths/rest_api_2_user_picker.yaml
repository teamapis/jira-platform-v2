get:
  tags:
    - User search
  summary: Find users for picker
  description: >-
    Returns a list of users whose attributes match the query term. The returned
    object includes the `html` field where the matched query term is highlighted
    with the HTML strong tag. A list of account IDs can be provided to exclude
    users from the results.


    This operation takes the users in the range defined by `maxResults`, up to
    the thousandth user, and then returns only the users from that range that
    match the query term. This means the operation usually returns fewer users
    than specified in `maxResults`. To get all the users who match the query
    term, use [Get all users](#api-rest-api-2-users-search-get) and filter the
    records in your code.


    Privacy controls are applied to the response based on the users'
    preferences. This could mean, for example, that the user's email address is
    hidden. See the [Profile visibility
    overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/)
    for more details.


    This operation can be accessed anonymously.


    **[Permissions](#permissions) required:** *Browse users and groups* [global
    permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls and
    calls by users without the required permission return search results for an
    exact name match only.
  operationId: findUsersForPicker
  parameters:
    - name: query
      in: query
      description: >-
        A query string that is matched against user attributes, such as
        `displayName`, and `emailAddress`, to find relevant users. The string
        can match the prefix of the attribute's value. For example, *query=john*
        matches a user with a `displayName` of *John Smith* and a user with an
        `emailAddress` of *johnson@example.com*.
      required: true
      schema:
        type: string
    - name: maxResults
      in: query
      description: >-
        The maximum number of items to return. The total number of matched users
        is returned in `total`.
      schema:
        type: integer
        format: int32
        default: 50
    - name: showAvatar
      in: query
      description: Include the URI to the user's avatar.
      schema:
        type: boolean
        default: false
    - name: exclude
      in: query
      description: >-
        This parameter is no longer available. See the [deprecation
        notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
        for details.
      schema:
        type: array
        items:
          type: string
    - name: excludeAccountIds
      in: query
      description: >-
        A list of account IDs to exclude from the search results. This parameter
        accepts a comma-separated list. Multiple account IDs can also be
        provided using an ampersand-separated list. For example,
        `excludeAccountIds=5b10a2844c20165700ede21g,5b10a0effa615349cb016cd8&excludeAccountIds=5b10ac8d82e05b22cc7d4ef5`.
        Cannot be provided with `exclude`.
      schema:
        type: array
        items:
          type: string
    - name: avatarSize
      in: query
      schema:
        type: string
    - name: excludeConnectUsers
      in: query
      schema:
        type: boolean
        default: false
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/FoundUsers.yaml
          example: >-
            {"users":[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","name":"mia","key":"mia","html":"<strong>Mi</strong>a
            Krystof - <strong>mi</strong>a@example.com
            (<strong>mi</strong>a)","displayName":"Mia
            Krystof","avatarUrl":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16"}],"total":25,"header":"Showing
            20 of 25 matching groups"}
    '400':
      description: Returned if `exclude` and `excludeAccountIds` are provided.
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '429':
      description: >-
        Returned if the rate limit is exceeded. User search endpoints share a
        collective rate limit for the tenant, in addition to Jira's normal rate
        limiting you may receive a rate limit for user search. Please respect
        the Retry-After header.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - read:jira-user
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:jira-user
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:user:jira
  x-atlassian-connect-scope: READ
