get:
  tags:
    - User search
  summary: Find users by query
  description: >-
    Finds users with a structured query and returns a [paginated](#pagination)
    list of user details.


    This operation takes the users in the range defined by `startAt` and
    `maxResults`, up to the thousandth user, and then returns only the users
    from that range that match the structured query. This means the operation
    usually returns fewer users than specified in `maxResults`. To get all the
    users who match the structured query, use [Get all
    users](#api-rest-api-2-users-search-get) and filter the records in your
    code.


    **[Permissions](#permissions) required:** *Browse users and groups* [global
    permission](https://confluence.atlassian.com/x/x4dKLg).


    The query statements are:

     *  `is assignee of PROJ` Returns the users that are assignees of at least one issue in project *PROJ*.
     *  `is assignee of (PROJ-1, PROJ-2)` Returns users that are assignees on the issues *PROJ-1* or *PROJ-2*.
     *  `is reporter of (PROJ-1, PROJ-2)` Returns users that are reporters on the issues *PROJ-1* or *PROJ-2*.
     *  `is watcher of (PROJ-1, PROJ-2)` Returns users that are watchers on the issues *PROJ-1* or *PROJ-2*.
     *  `is voter of (PROJ-1, PROJ-2)` Returns users that are voters on the issues *PROJ-1* or *PROJ-2*.
     *  `is commenter of (PROJ-1, PROJ-2)` Returns users that have posted a comment on the issues *PROJ-1* or *PROJ-2*.
     *  `is transitioner of (PROJ-1, PROJ-2)` Returns users that have performed a transition on issues *PROJ-1* or *PROJ-2*.
     *  `[propertyKey].entity.property.path is "property value"` Returns users with the entity property value.

    The list of issues can be extended as needed, as in *(PROJ-1, PROJ-2, ...
    PROJ-n)*. Statements can be combined using the `AND` and `OR` operators to
    form more complex queries. For example:


    `is assignee of PROJ AND [propertyKey].entity.property.path is "property
    value"`
  operationId: findUsersByQuery
  parameters:
    - name: query
      in: query
      description: The search query.
      required: true
      schema:
        type: string
    - name: startAt
      in: query
      description: >-
        The index of the first item to return in a page of results (page
        offset).
      schema:
        type: integer
        format: int64
        default: 0
    - name: maxResults
      in: query
      description: The maximum number of items to return per page.
      schema:
        type: integer
        format: int32
        default: 100
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PageBeanUser.yaml
    '400':
      description: Returned if the query is invalid.
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: Returned if the user does not have the necessary permission.
    '408':
      description: Returned if the search is timed out.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - read:jira-user
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:jira-user
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:comment:jira
        - read:issue:jira
        - read:issue.vote:jira
        - read:issue.watcher:jira
        - read:project:jira
        - read:user:jira
        - read:user.property:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
  x-atlassian-connect-scope: READ
