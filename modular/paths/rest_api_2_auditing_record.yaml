get:
  tags:
    - Audit records
  summary: Get audit records
  description: >-
    Returns a list of audit records. The list can be filtered to include items:

     *  where each item in `filter` has at least one match in any of these fields:
        
         *  `summary`
         *  `category`
         *  `eventSource`
         *  `objectItem.name` If the object is a user, account ID is available to filter.
         *  `objectItem.parentName`
         *  `objectItem.typeName`
         *  `changedValues.changedFrom`
         *  `changedValues.changedTo`
         *  `remoteAddress`
        
        For example, if `filter` contains *man ed*, an audit record containing `summary": "User added to group"` and `"category": "group management"` is returned.
     *  created on or after a date and time.
     *  created or or before a date and time.

    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg).
  operationId: getAuditRecords
  parameters:
    - name: offset
      in: query
      description: The number of records to skip before returning the first result.
      schema:
        type: integer
        format: int32
        default: 0
    - name: limit
      in: query
      description: The maximum number of results to return.
      schema:
        type: integer
        format: int32
        default: 1000
    - name: filter
      in: query
      description: The strings to match with audit field content, space separated.
      schema:
        type: string
    - name: from
      in: query
      description: >-
        The date and time on or after which returned audit records must have
        been created. If `to` is provided `from` must be before `to` or no audit
        records are returned.
      schema:
        type: string
        format: date-time
    - name: to
      in: query
      description: >-
        The date and time on or before which returned audit results must have
        been created. If `from` is provided `to` must be after `from` or no
        audit records are returned.
      schema:
        type: string
        format: date-time
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/AuditRecords.yaml
          example: >-
            {"offset":0,"limit":1000,"total":1,"records":[{"id":1,"summary":"User
            created","remoteAddress":"192.168.1.1","authorKey":"administrator","authorAccountId":"5ab8f18d741e9c2c7e9d4538","created":"2014-03-19T18:45:42.967+0000","category":"user
            management","eventSource":"Jira Connect
            Plugin","description":"Optional
            description","objectItem":{"id":"user","name":"user","typeName":"USER","parentId":"1","parentName":"Jira
            Internal
            Directory"},"changedValues":[{"fieldName":"email","changedFrom":"user@atlassian.com","changedTo":"newuser@atlassian.com"}],"associatedItems":[{"id":"jira-software-users","name":"jira-software-users","typeName":"GROUP","parentId":"1","parentName":"Jira
            Internal Directory"}]}]}
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: |-
        Returned if:

         *  the user does not have the required permissions.
         *  all Jira products are on free plans. Audit logs are available when at least one Jira product is on a paid plan.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - manage:jira-configuration
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - manage:jira-configuration
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:audit-log:jira
        - read:user:jira
  x-atlassian-connect-scope: READ
