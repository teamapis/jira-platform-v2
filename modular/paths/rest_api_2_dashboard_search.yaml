get:
  tags:
    - Dashboards
  summary: Search for dashboards
  description: >-
    Returns a [paginated](#pagination) list of dashboards. This operation is
    similar to [Get dashboards](#api-rest-api-2-dashboard-get) except that the
    results can be refined to include dashboards that have specific attributes.
    For example, dashboards with a particular name. When multiple attributes are
    specified only filters matching all attributes are returned.


    This operation can be accessed anonymously.


    **[Permissions](#permissions) required:** The following dashboards that
    match the query parameters are returned:

     *  Dashboards owned by the user. Not returned for anonymous users.
     *  Dashboards shared with a group that the user is a member of. Not returned for anonymous users.
     *  Dashboards shared with a private project that the user can browse. Not returned for anonymous users.
     *  Dashboards shared with a public project.
     *  Dashboards shared with the public.
  operationId: getDashboardsPaginated
  parameters:
    - name: dashboardName
      in: query
      description: String used to perform a case-insensitive partial match with `name`.
      schema:
        type: string
    - name: accountId
      in: query
      description: >-
        User account ID used to return dashboards with the matching
        `owner.accountId`. This parameter cannot be used with the `owner`
        parameter.
      schema:
        maxLength: 128
        type: string
    - name: owner
      in: query
      description: >-
        This parameter is deprecated because of privacy changes. Use `accountId`
        instead. See the [migration
        guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
        for details. User name used to return dashboards with the matching
        `owner.name`. This parameter cannot be used with the `accountId`
        parameter.
      schema:
        type: string
    - name: groupname
      in: query
      description: >-
        As a group's name can change, use of `groupId` is recommended. Group
        name used to return dashboards that are shared with a group that matches
        `sharePermissions.group.name`. This parameter cannot be used with the
        `groupId` parameter.
      schema:
        type: string
    - name: groupId
      in: query
      description: >-
        Group ID used to return dashboards that are shared with a group that
        matches `sharePermissions.group.groupId`. This parameter cannot be used
        with the `groupname` parameter.
      schema:
        type: string
    - name: projectId
      in: query
      description: >-
        Project ID used to returns dashboards that are shared with a project
        that matches `sharePermissions.project.id`.
      schema:
        type: integer
        format: int64
    - name: orderBy
      in: query
      description: |-
        [Order](#ordering) the results by a field:

         *  `description` Sorts by dashboard description. Note that this sort works independently of whether the expand to display the description field is in use.
         *  `favourite_count` Sorts by dashboard popularity.
         *  `id` Sorts by dashboard ID.
         *  `is_favourite` Sorts by whether the dashboard is marked as a favorite.
         *  `name` Sorts by dashboard name.
         *  `owner` Sorts by dashboard owner name.
      schema:
        type: string
        enum:
          - description
          - '-description'
          - +description
          - favorite_count
          - '-favorite_count'
          - +favorite_count
          - id
          - '-id'
          - +id
          - is_favorite
          - '-is_favorite'
          - +is_favorite
          - name
          - '-name'
          - +name
          - owner
          - '-owner'
          - +owner
        default: name
    - name: startAt
      in: query
      description: >-
        The index of the first item to return in a page of results (page
        offset).
      schema:
        type: integer
        format: int64
        default: 0
    - name: maxResults
      in: query
      description: The maximum number of items to return per page.
      schema:
        type: integer
        format: int32
        default: 50
    - name: status
      in: query
      description: The status to filter by. It may be active, archived or deleted.
      schema:
        type: string
        enum:
          - active
          - archived
          - deleted
        default: active
    - name: expand
      in: query
      description: >-
        Use [expand](#expansion) to include additional information about
        dashboard in the response. This parameter accepts a comma-separated
        list. Expand options include:

         *  `description` Returns the description of the dashboard.
         *  `owner` Returns the owner of the dashboard.
         *  `viewUrl` Returns the URL that is used to view the dashboard.
         *  `favourite` Returns `isFavourite`, an indicator of whether the user has set the dashboard as a favorite.
         *  `favouritedCount` Returns `popularity`, a count of how many users have set this dashboard as a favorite.
         *  `sharePermissions` Returns details of the share permissions defined for the dashboard.
         *  `editPermissions` Returns details of the edit permissions defined for the dashboard.
         *  `isWritable` Returns whether the current user has permission to edit the dashboard.
      schema:
        type: string
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PageBeanDashboard.yaml
          example: >-
            {"self":"https://your-domain.atlassian.net/rest/api/2/dashboard/search?expand=owner&maxResults=50&startAt=0","maxResults":100,"startAt":0,"total":2,"isLast":true,"values":[{"description":"Testing
            program","id":"1","isFavourite":true,"name":"Testing","owner":{"self":"https://your-domain.atlassian.net/user?accountId=5b10a2844c20165700ede21g","displayName":"Mia","active":true,"accountId":"5b10a2844c20165700ede21g","avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"}},"popularity":1,"self":"https://your-domain.atlassian.net/rest/api/2/dashboard/1","sharePermissions":[{"type":"global"}],"view":"https://your-domain.atlassian.net/Dashboard.jspa?selectPageId=1"},{"description":"Quantum
            initiative","id":"2","isFavourite":false,"name":"Quantum
            ","owner":{"self":"https://your-domain.atlassian.net/user?accountId=5b10a2844c20165700ede21g","displayName":"Mia","active":true,"accountId":"5b10a2844c20165700ede21g","avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"}},"popularity":0,"self":"https://your-domain.atlassian.net/rest/api/2/dashboard/2","sharePermissions":[{"type":"loggedin"}],"view":"https://your-domain.atlassian.net/Dashboard.jspa?selectPageId=2"}]}
    '400':
      description: |-
        Returned if:

         *  `orderBy` is invalid.
         *  `expand` includes an invalid value.
         *  `accountId` and `owner` are provided.
         *  `groupname` and `groupId` are provided.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
    '401':
      description: 401 response
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - read:jira-work
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:jira-work
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:dashboard:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
  x-atlassian-connect-scope: READ
