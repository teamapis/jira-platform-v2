get:
  tags:
    - Permissions
  summary: Get my permissions
  description: >-
    Returns a list of permissions indicating which permissions the user has.
    Details of the user's permissions can be obtained in a global, project,
    issue or comment context.


    The user is reported as having a project permission:

     *  in the global context, if the user has the project permission in any project.
     *  for a project, where the project permission is determined using issue data, if the user meets the permission's criteria for any issue in the project. Otherwise, if the user has the project permission in the project.
     *  for an issue, where a project permission is determined using issue data, if the user has the permission in the issue. Otherwise, if the user has the project permission in the project containing the issue.
     *  for a comment, where the user has both the permission to browse the comment and the project permission for the comment's parent issue. Only the BROWSE\_PROJECTS permission is supported. If a `commentId` is provided whose `permissions` does not equal BROWSE\_PROJECTS, a 400 error will be returned.

    This means that users may be shown as having an issue permission (such as
    EDIT\_ISSUES) in the global context or a project context but may not have
    the permission for any or all issues. For example, if Reporters have the
    EDIT\_ISSUES permission a user would be shown as having this permission in
    the global context or the context of a project, because any user can be a
    reporter. However, if they are not the user who reported the issue queried
    they would not have EDIT\_ISSUES permission for that issue.


    Global permissions are unaffected by context.


    This operation can be accessed anonymously.


    **[Permissions](#permissions) required:** None.
  operationId: getMyPermissions
  parameters:
    - name: projectKey
      in: query
      description: The key of project. Ignored if `projectId` is provided.
      schema:
        type: string
    - name: projectId
      in: query
      description: The ID of project.
      schema:
        type: string
    - name: issueKey
      in: query
      description: The key of the issue. Ignored if `issueId` is provided.
      schema:
        type: string
    - name: issueId
      in: query
      description: The ID of the issue.
      schema:
        type: string
    - name: permissions
      in: query
      description: >-
        A list of permission keys. (Required) This parameter accepts a
        comma-separated list. To get the list of available permissions, use [Get
        all permissions](#api-rest-api-2-permissions-get).
      schema:
        type: string
        example: BROWSE_PROJECTS,EDIT_ISSUES
      x-showInExample: 'true'
      x-changes:
        - type: required
          announced: '2018-08-01'
          effective: '2019-02-01'
          details: >-
            https://developer.atlassian.com/cloud/jira/platform/change-notice-get-my-permissions-requires-permissions-query-parameter/
    - name: projectUuid
      in: query
      schema:
        type: string
    - name: projectConfigurationUuid
      in: query
      schema:
        type: string
    - name: commentId
      in: query
      description: The ID of the comment.
      schema:
        type: string
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Permissions.yaml
          example: >-
            {"permissions":{"EDIT_ISSUES":{"id":"12","key":"EDIT_ISSUES","name":"Edit
            Issues","type":"PROJECT","description":"Ability to edit
            issues.","havePermission":true}}}
    '400':
      description: >-
        Returned if `permissions` is empty, contains an invalid key, or does not
        equal BROWSE\_PROJECTS when commentId is provided.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
    '404':
      description: >-
        Returned if the project or issue is not found or the user does not have
        permission to view the project or issue.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2: []
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes: []
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:permission:jira
  x-atlassian-connect-scope: READ
