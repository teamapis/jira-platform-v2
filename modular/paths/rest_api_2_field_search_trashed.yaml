get:
  tags:
    - Issue fields
  summary: Get fields in trash paginated
  description: >-
    Returns a [paginated](#pagination) list of fields in the trash. The list may
    be restricted to fields whose field name or description partially match a
    string.


    Only custom fields can be queried, `type` must be set to `custom`.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg).
  operationId: getTrashedFieldsPaginated
  parameters:
    - name: startAt
      in: query
      description: >-
        The index of the first item to return in a page of results (page
        offset).
      schema:
        type: integer
        format: int64
        default: 0
    - name: maxResults
      in: query
      description: The maximum number of items to return per page.
      schema:
        type: integer
        format: int32
        default: 50
    - name: id
      in: query
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
    - name: query
      in: query
      description: >-
        String used to perform a case-insensitive partial match with field names
        or descriptions.
      schema:
        type: string
    - name: orderBy
      in: query
      description: |-
        [Order](#ordering) the results by a field:

         *  `name` sorts by the field name
         *  `trashDate` sorts by the date the field was moved to the trash
         *  `plannedDeletionDate` sorts by the planned deletion date
      schema:
        type: string
        enum:
          - name
          - '-name'
          - +name
          - trashDate
          - '-trashDate'
          - +trashDate
          - plannedDeletionDate
          - '-plannedDeletionDate'
          - +plannedDeletionDate
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PageBeanField.yaml
          example: >-
            {"maxResults":50,"startAt":0,"total":1,"isLast":false,"values":[{"id":"customfield_10000","name":"Approvers","schema":{"type":"array","custom":"com.atlassian.jira.plugin.system.customfieldtypes:multiuserpicker","customId":10003},"description":"Contains
            users needed for approval. This custom field was created by Jira
            Service
            Desk.","key":"customfield_10003","trashedDate":"2019-09-12T10:10:00.168+0000","trashedBy":{"self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g","accountId":"5b10a2844c20165700ede21g","emailAddress":"mia@example.com","avatarUrls":{"48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32"},"displayName":"Mia
            Krystof","active":true,"timeZone":"Australia/Sydney"},"plannedDeletionDate":"2019-09-30T10:10:00.168+0000"}]}
    '400':
      description: Returned if the request is invalid.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
          example: '{"errorMessages":["Only custom fields can be queried."],"errors":{}}'
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: Returned if the user does not have the necessary permission.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
          example: >-
            {"errorMessages":["Only Jira administrators can access
            fields."],"errors":{}}
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - read:jira-work
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:jira-work
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:field:jira
        - read:field-configuration:jira
        - read:user:jira
  x-experimental: true
  x-atlassian-connect-scope: READ
