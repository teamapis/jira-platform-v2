get:
  tags:
    - Screen schemes
  summary: Get screen schemes
  description: >-
    Returns a [paginated](#pagination) list of screen schemes.


    Only screen schemes used in classic projects are returned.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg).
  operationId: getScreenSchemes
  parameters:
    - name: startAt
      in: query
      description: >-
        The index of the first item to return in a page of results (page
        offset).
      schema:
        type: integer
        format: int64
        default: 0
    - name: maxResults
      in: query
      description: The maximum number of items to return per page.
      schema:
        type: integer
        format: int32
        default: 25
    - name: id
      in: query
      description: >-
        The list of screen scheme IDs. To include multiple IDs, provide an
        ampersand-separated list. For example, `id=10000&id=10001`.
      schema:
        uniqueItems: true
        type: array
        items:
          type: integer
          format: int64
    - name: expand
      in: query
      description: >-
        Use [expand](#expansion) include additional information in the response.
        This parameter accepts `issueTypeScreenSchemes` that, for each screen
        schemes, returns information about the issue type screen scheme the
        screen scheme is assigned to.
      schema:
        type: string
        default: ''
    - name: queryString
      in: query
      description: >-
        String used to perform a case-insensitive partial match with screen
        scheme name.
      schema:
        type: string
        default: ''
    - name: orderBy
      in: query
      description: |-
        [Order](#ordering) the results by a field:

         *  `id` Sorts by screen scheme ID.
         *  `name` Sorts by screen scheme name.
      schema:
        type: string
        enum:
          - name
          - '-name'
          - +name
          - id
          - '-id'
          - +id
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PageBeanScreenScheme.yaml
          example: >-
            {"self":"https://your-domain.atlassian.net/rest/api/2/screenscheme?maxResults=25&startAt=0","maxResults":100,"startAt":0,"total":2,"isLast":true,"values":[{"id":10010,"name":"Employee
            screen scheme","description":"Manage employee
            data","screens":{"default":10017,"edit":10019,"create":10019,"view":10020},"issueTypeScreenSchemes":{"maxResults":100,"startAt":0,"total":1,"isLast":true,"values":[{"id":"10000","name":"Office
            issue type screen scheme","description":"Managing office
            projects"}]}},{"id":10032,"name":"Office screen
            scheme","description":"Manage office
            data","screens":{"default":10020}}]}
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: Returned if the user does not have the necessary permission.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - manage:jira-project
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - manage:jira-project
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:screen-scheme:jira
        - read:issue-type-screen-scheme:jira
  x-atlassian-connect-scope: ADMIN
post:
  tags:
    - Screen schemes
  summary: Create screen scheme
  description: >-
    Creates a screen scheme.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg).
  operationId: createScreenScheme
  parameters: []
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/ScreenSchemeDetails.yaml
        example:
          screens:
            default: 10017
            view: 10020
            edit: 10019
          name: Employee screen scheme
          description: Manage employee data
    required: true
  responses:
    '201':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ScreenSchemeId.yaml
          example: '{"id":10001}'
    '400':
      description: Returned if the request is not valid.
      content:
        application/json:
          example: >-
            {"errorMessages":["The name is used by another
            scheme."],"errors":{}}
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: Returned if the user does not have the required permissions.
      content:
        application/json:
          example: >-
            {"errorMessages":["Only Jira administrators can access screen
            schemes."],"errors":{}}
    '404':
      description: >-
        Returned if a screen used as one of the screen types in the screen
        scheme is not found.
      content:
        application/json:
          example: >-
            {"errorMessages":["One or more screens assigned to screen types was
            not found."],"errors":{}}
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - manage:jira-configuration
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - manage:jira-configuration
    - state: Beta
      scheme: OAuth2
      scopes:
        - write:screen-scheme:jira
  x-experimental: true
  x-atlassian-connect-scope: ADMIN
