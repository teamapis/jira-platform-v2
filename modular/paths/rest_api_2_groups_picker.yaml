get:
  tags:
    - Groups
  summary: Find groups
  description: >-
    Returns a list of groups whose names contain a query string. A list of group
    names can be provided to exclude groups from the results.


    The primary use case for this resource is to populate a group picker
    suggestions list. To this end, the returned object includes the `html` field
    where the matched query term is highlighted in the group name with the HTML
    strong tag. Also, the groups list is wrapped in a response object that
    contains a header for use in the picker, specifically *Showing X of Y
    matching groups*.


    The list returns with the groups sorted. If no groups match the list
    criteria, an empty list is returned.


    This operation can be accessed anonymously.


    **[Permissions](#permissions) required:** *Browse projects* [project
    permission](https://confluence.atlassian.com/x/yodKLg). Anonymous calls and
    calls by users without the required permission return an empty list.
  operationId: findGroups
  parameters:
    - name: accountId
      in: query
      description: >-
        This parameter is deprecated, setting it does not affect the results. To
        find groups containing a particular user, use [Get user
        groups](#api-rest-api-2-user-groups-get).
      schema:
        type: string
    - name: query
      in: query
      description: The string to find in group names.
      schema:
        type: string
        example: query
    - name: exclude
      in: query
      description: >-
        As a group's name can change, use of `excludeGroupIds` is recommended to
        identify a group.  

        A group to exclude from the result. To exclude multiple groups, provide
        an ampersand-separated list. For example,
        `exclude=group1&exclude=group2`. This parameter cannot be used with the
        `excludeGroupIds` parameter.
      schema:
        type: array
        items:
          type: string
    - name: excludeId
      in: query
      description: >-
        A group ID to exclude from the result. To exclude multiple groups,
        provide an ampersand-separated list. For example,
        `excludeId=group1-id&excludeId=group2-id`. This parameter cannot be used
        with the `excludeGroups` parameter.
      schema:
        type: array
        items:
          type: string
    - name: maxResults
      in: query
      description: >-
        The maximum number of groups to return. The maximum number of groups
        that can be returned is limited by the system property
        `jira.ajax.autocomplete.limit`.
      schema:
        type: integer
        format: int32
    - name: userName
      in: query
      description: >-
        This parameter is no longer available. See the [deprecation
        notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
        for details.
      schema:
        type: string
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/FoundGroups.yaml
          example: >-
            {"header":"Showing 20 of 25 matching
            groups","total":25,"groups":[{"name":"jdog-developers","html":"<b>j</b>dog-developers","groupId":"276f955c-63d7-42c8-9520-92d01dca0625"},{"name":"juvenal-bot","html":"<b>j</b>uvenal-bot","groupId":"6e87dc72-4f1f-421f-9382-2fee8b652487"}]}
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - read:jira-user
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:jira-user
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:group:jira
  x-atlassian-connect-scope: READ
