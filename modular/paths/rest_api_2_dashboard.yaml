get:
  tags:
    - Dashboards
  summary: Get all dashboards
  description: >-
    Returns a list of dashboards owned by or shared with the user. The list may
    be filtered to include only favorite or owned dashboards.


    This operation can be accessed anonymously.


    **[Permissions](#permissions) required:** None.
  operationId: getAllDashboards
  parameters:
    - name: filter
      in: query
      description: |-
        The filter applied to the list of dashboards. Valid values are:

         *  `favourite` Returns dashboards the user has marked as favorite.
         *  `my` Returns dashboards owned by the user.
      schema:
        type: string
        enum:
          - my
          - favourite
    - name: startAt
      in: query
      description: >-
        The index of the first item to return in a page of results (page
        offset).
      schema:
        type: integer
        format: int32
        default: 0
    - name: maxResults
      in: query
      description: The maximum number of items to return per page.
      schema:
        type: integer
        format: int32
        default: 20
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PageOfDashboards.yaml
          example: >-
            {"startAt":10,"maxResults":10,"total":143,"prev":"https://your-domain.atlassian.net/rest/api/2/dashboard?startAt=0","next":"https://your-domain.atlassian.net/rest/api/2/dashboard?startAt=10","dashboards":[{"id":"10000","isFavourite":false,"name":"System
            Dashboard","popularity":1,"self":"https://your-domain.atlassian.net/rest/api/2/dashboard/10000","sharePermissions":[{"type":"global"}],"view":"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000"},{"id":"20000","isFavourite":true,"name":"Build
            Engineering","owner":{"key":"Mia","self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g","name":"mia","displayName":"Mia
            Krystof","avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"}},"popularity":1,"self":"https://your-domain.atlassian.net/rest/api/2/dashboard/20000","sharePermissions":[{"id":10105,"type":"group","group":{"name":"administrators","self":"https://your-domain.atlassian.net/rest/api/2/group?groupname=administrators"}}],"view":"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=20000"}]}
    '400':
      description: Returned if the request is invalid.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - read:jira-work
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:jira-work
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:dashboard:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
  x-atlassian-connect-scope: READ
post:
  tags:
    - Dashboards
  summary: Create dashboard
  description: |-
    Creates a dashboard.

    **[Permissions](#permissions) required:** None.
  operationId: createDashboard
  parameters: []
  requestBody:
    description: Dashboard details.
    content:
      application/json:
        schema:
          $ref: ../components/schemas/DashboardDetails.yaml
        example:
          editPermissions: []
          name: Auditors dashboard
          description: A dashboard to help auditors identify sample of issues to check.
          sharePermissions:
            - type: global
    required: true
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Dashboard.yaml
          example: >-
            {"id":"10000","isFavourite":false,"name":"System
            Dashboard","popularity":1,"self":"https://your-domain.atlassian.net/rest/api/2/dashboard/10000","sharePermissions":[{"type":"global"}],"view":"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000"}
    '400':
      description: Returned if the request is not valid.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorCollection.yaml
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - write:jira-work
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - write:jira-work
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:dashboard:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - write:dashboard:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
  x-experimental: true
  x-atlassian-connect-scope: WRITE
