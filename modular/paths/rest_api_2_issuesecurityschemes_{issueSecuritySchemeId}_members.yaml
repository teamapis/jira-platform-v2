get:
  tags:
    - Issue security level
  summary: Get issue security level members
  description: >-
    Returns issue security level members.


    Only issue security level members in context of classic projects are
    returned.


    **[Permissions](#permissions) required:** *Administer Jira* [global
    permission](https://confluence.atlassian.com/x/x4dKLg).
  operationId: getIssueSecurityLevelMembers
  parameters:
    - name: issueSecuritySchemeId
      in: path
      description: >-
        The ID of the issue security scheme. Use the [Get issue security
        schemes](#api-rest-api-2-issuesecurityschemes-get) operation to get a
        list of issue security scheme IDs.
      required: true
      schema:
        type: integer
        format: int64
    - name: startAt
      in: query
      description: >-
        The index of the first item to return in a page of results (page
        offset).
      schema:
        type: integer
        format: int64
        default: 0
    - name: maxResults
      in: query
      description: The maximum number of items to return per page.
      schema:
        type: integer
        format: int32
        default: 50
    - name: issueSecurityLevelId
      in: query
      description: >-
        The list of issue security level IDs. To include multiple issue security
        levels separate IDs with ampersand:
        `issueSecurityLevelId=10000&issueSecurityLevelId=10001`.
      schema:
        uniqueItems: true
        type: array
        items:
          type: integer
          format: int64
    - name: expand
      in: query
      description: >-
        Use expand to include additional information in the response. This
        parameter accepts a comma-separated list. Expand options include:

         *  `all` Returns all expandable information.
         *  `field` Returns information about the custom field granted the permission.
         *  `group` Returns information about the group that is granted the permission.
         *  `projectRole` Returns information about the project role granted the permission.
         *  `user` Returns information about the user who is granted the permission.
      schema:
        type: string
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PageBeanIssueSecurityLevelMember.yaml
          example: >-
            {"maxResults":100,"startAt":0,"total":3,"isLast":true,"values":[{"id":10000,"issueSecurityLevelId":10020,"holder":{"type":"user","user":{"self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g","accountId":"5b10a2844c20165700ede21g","emailAddress":"mia@example.com","avatarUrls":{"48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32"},"displayName":"Mia
            Krystof","active":true,"timeZone":"Australia/Sydney"},"expand":"user"}},{"id":10001,"issueSecurityLevelId":10020,"holder":{"type":"group","parameter":"jira-core-users","value":"9c559b11-6c5d-4f96-992c-a746cabab28b","expand":"group"}},{"id":10002,"issueSecurityLevelId":10021,"holder":{"type":"assignee"}}]}
    '400':
      description: Returned if the request is not valid.
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
    '403':
      description: Returned if the user does not have the necessary permission.
    '404':
      description: Returned if no issue security level members are found.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - manage:jira-configuration
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - manage:jira-configuration
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:field:jira
        - read:issue-security-level:jira
        - read:project-role:jira
        - read:user:jira
  x-atlassian-connect-scope: PROJECT_ADMIN
