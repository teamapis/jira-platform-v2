get:
  tags:
    - Issue search
  summary: Get issue picker suggestions
  description: >-
    Returns lists of issues matching a query string. Use this resource to
    provide auto-completion suggestions when the user is looking for an issue
    using a word or string.


    This operation returns two lists:

     *  `History Search` which includes issues from the user's history of created, edited, or viewed issues that contain the string in the `query` parameter.
     *  `Current Search` which includes issues that match the JQL expression in `currentJQL` and contain the string in the `query` parameter.

    This operation can be accessed anonymously.


    **[Permissions](#permissions) required:** None.
  operationId: getIssuePickerResource
  parameters:
    - name: query
      in: query
      description: >-
        A string to match against text fields in the issue such as title,
        description, or comments.
      schema:
        type: string
        example: query
      x-showInExample: 'true'
    - name: currentJQL
      in: query
      description: >-
        A JQL query defining a list of issues to search for the query term. Note
        that `username` and `userkey` cannot be used as search terms for this
        parameter, due to privacy reasons. Use `accountId` instead.
      schema:
        type: string
    - name: currentIssueKey
      in: query
      description: >-
        The key of an issue to exclude from search results. For example, the
        issue the user is viewing when they perform this query.
      schema:
        type: string
    - name: currentProjectId
      in: query
      description: The ID of a project that suggested issues must belong to.
      schema:
        type: string
    - name: showSubTasks
      in: query
      description: Indicate whether to include subtasks in the suggestions list.
      schema:
        type: boolean
    - name: showSubTaskParent
      in: query
      description: >-
        When `currentIssueKey` is a subtask, whether to include the parent issue
        in the suggestions if it matches the query.
      schema:
        type: boolean
  responses:
    '200':
      description: Returned if the request is successful.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/IssuePickerSuggestions.yaml
    '401':
      description: Returned if the authentication credentials are incorrect or missing.
  deprecated: false
  security:
    - basicAuth: []
    - OAuth2:
        - read:jira-work
    - {}
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:jira-work
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:issue-details:jira
  x-atlassian-connect-scope: READ
