type: object
properties:
  self:
    type: string
    description: The URL of the comment.
    readOnly: true
  id:
    type: string
    description: The ID of the comment.
    readOnly: true
  author:
    description: The ID of the user who created the comment.
    readOnly: true
    allOf:
      - $ref: ./UserDetails.yaml
  body:
    type: string
    description: The comment text.
  renderedBody:
    type: string
    description: The rendered version of the comment.
    readOnly: true
  updateAuthor:
    description: The ID of the user who updated the comment last.
    readOnly: true
    allOf:
      - $ref: ./UserDetails.yaml
  created:
    type: string
    description: The date and time at which the comment was created.
    format: date-time
    readOnly: true
  updated:
    type: string
    description: The date and time at which the comment was updated last.
    format: date-time
    readOnly: true
  visibility:
    description: >-
      The group or role to which this comment is visible. Optional on create and
      update.
    allOf:
      - $ref: ./Visibility.yaml
  jsdPublic:
    type: boolean
    description: >-
      Whether the comment is visible in Jira Service Desk. Defaults to true when
      comments are created in the Jira Cloud Platform. This includes when the
      site doesn't use Jira Service Desk or the project isn't a Jira Service
      Desk project and, therefore, there is no Jira Service Desk for the issue
      to be visible on. To create a comment with its visibility in Jira Service
      Desk set to false, use the Jira Service Desk REST API [Create request
      comment](https://developer.atlassian.com/cloud/jira/service-desk/rest/#api-rest-servicedeskapi-request-issueIdOrKey-comment-post)
      operation.
    readOnly: true
  jsdAuthorCanSeeRequest:
    type: boolean
    description: >-
      Whether the comment was added from an email sent by a person who is not
      part of the issue. See [Allow external emails to be added as comments on
      issues](https://support.atlassian.com/jira-service-management-cloud/docs/allow-external-emails-to-be-added-as-comments-on-issues/)for
      information on setting up this feature.
    readOnly: true
  properties:
    type: array
    description: A list of comment properties. Optional on create and update.
    items:
      $ref: ./EntityProperty.yaml
additionalProperties: true
description: A comment.
